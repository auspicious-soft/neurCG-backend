import axios from "axios";
import { configDotenv } from "dotenv";
import { Request, Response } from "express";
import FormData from "form-data";

configDotenv();

const flaskUrl = process.env.FLASK_BACKEND_ML_URL as string;

export const getFile = async (req: Request, res: Response) => {
    const { subpath } = req.body;
    try {
        const formData = new FormData();
        formData.append("subpath", subpath);

        const response = await axios.post(`${flaskUrl}/get-file`, formData, {
            responseType: 'arraybuffer',
            headers: {
                'Content-Type': 'multipart/form-data',
            }
        });
        if (!response.data || !(response.data.length > 0)) {
            throw new Error('Empty or invalid file response from Flask API');
        }
        const fileBuffer = Buffer.from(response.data);

        const contentType = response.headers['content-type'] || 'application/octet-stream';
        res.set('Content-Type', contentType);
        res.send(fileBuffer);
    } catch (error) {
        console.log(error);
        return res.status(500).json({ success: false, message: "Internal Server Error" });
    }
};

export const uploadFile = async (req: Request, res: Response) => {
    const file = req.file;
    const { subpath } = req.body;
    const formData = new FormData();
    if (file) {
        const blob = new Blob([file.buffer], { type: file.mimetype });
        formData.append("file", blob);
        formData.append("subpath", subpath);
        try {
            const response = await axios.post(`${flaskUrl}/upload-file`, formData, {
                timeout: 600000,
                headers: {
                    'Content-Type': 'multipart/form-data',
                },
            });
            if (response.status !== 200) {
                throw new Error('Failed to upload file to Flask API');
            }
            res.status(200).json({ success: true, message: "File uploaded successfully" });
        } catch (error) {
            console.log(error);
            return res.status(500).json({ success: false, message: "Internal Server Error" });
        }
    } else {
        return res.status(400).json({ success: false, message: "No file uploaded" });
    }
};

export const deleteFile = async (req: Request, res: Response) => {
    const { subpath } = req.body;
    try {
        const formData = new FormData();
        formData.append("subpath", subpath);
        const response = await axios.post(`${flaskUrl}/delete-file`, formData, {
            headers: {
                'Content-Type': 'multipart/form-data',
            },
        });
        if (response.status !== 200) {
            throw new Error('Failed to delete file from Flask API');
        }
        res.status(200).json({ success: true, message: "File deleted successfully" });
    } catch (error) {
        console.log(error);
        return res.status(500).json({ success: false, message: "Internal Server Error" });
    }
};